<?php
// Security:  Always sanitize and validate input!
// Ensure only authorized users can access this script.

/**
* Transfiler: Indexer v1.0.0
* Copyight 2025 VR51, Lee Hodson, Gemini Flash 2
*
* 1. Place this script on Server One.
* 2. Configure the settings that start at line 26.
* 3. Open a browser at [domain]/index_files.php
* 4. Click the Generate Index button.
* 5. Copy the generated index file's name (not the link) and paste it into the web form generated by script two on server two: Transfiler: Downloader v1.0.0
* 6. Delete this script from your web server after use. If you leave it in place someone else might use it to copy your files.
*/

$base_path = isset($_POST['path']) ? realpath($_POST['path']) : __DIR__; // Default to script directory
if (!$base_path) {
    die("Invalid path.");
}
$base_path = rtrim($base_path, '/'); // Remove trailing slash for consistency

// open_basedir restriction is highly recommended
// ini_set('open_basedir', '/path/to/allowed/directory/');

// Configuration Settings
$allowed_extensions = ['jpg', 'jpeg', 'png', 'webp', 'avif', 'gif', 'pdf', 'txt', 'doc', 'docx', 'xls', 'xlsx', 'csv']; // Allowed file extensions
$disallowed_extensions = ['php', 'exe', 'sh']; // Disallowed file extensions
$allowed_directories = ['wp-content']; // Allowed directories to crawl (empty array allows all)
$disallowed_directories = ['.git', 'node_modules', 'cache', 'wp-content/themes', 'wp-content/plugins', 'wp-content/litespeed', 'wp-content/upgrade', 'wp-content/upgrade-temp-backup']; // Disallowed directories

$enable_allowed_extensions = false; // Enable or disable allowed extensions check
$enable_disallowed_extensions = true; // Enable or disable disallowed extensions check
$enable_allowed_directories = true; // Enable or disable allowed directories check
$enable_disallowed_directories = true; // Enable or disable disallowed directories check

// Function to generate CSV data
function generate_csv_data(
    $directory,
    $allowed_extensions,
    $disallowed_extensions,
    $allowed_directories,
    $disallowed_directories,
    $enable_allowed_extensions,
    $enable_disallowed_extensions,
    $enable_allowed_directories,
    $enable_disallowed_directories
) {
    $data = [];
    $data[] = "Name,Relative Path,Type,Size";  // CSV Header

    $dir_iterator = new RecursiveDirectoryIterator($directory, RecursiveDirectoryIterator::SKIP_DOTS);
    $iterator = new RecursiveIteratorIterator($dir_iterator, RecursiveIteratorIterator::SELF_FIRST);

    foreach ($iterator as $item) {
        $relative_path = str_replace($directory, '.', $item->getPathname()); // Relative Path
        $name = $item->getFilename();
        $extension = strtolower(pathinfo($name, PATHINFO_EXTENSION));

        // Skip disallowed directories
        if ($enable_disallowed_directories) {
            $skip = false;
            foreach ($disallowed_directories as $disallowed_dir) {
                // Check if disallowed directory is in relative path
                if (strpos($relative_path, "./" . $disallowed_dir) !== false) {
                    $skip = true;
                    break;
                }
            }
            if ($skip) {
                continue; // Skip to the next file
            }
        }

        // Skip files that don't have an allowed directory
        if ($enable_allowed_directories && !empty($allowed_directories)) {
          $is_allowed = false;
          foreach($allowed_directories as $allowed_dir) {
            if (strpos($relative_path, "./" . $allowed_dir) !== false) {
              $is_allowed = true;
              break;
            }
          }
          if(!$is_allowed) continue;
        }

        // Skip files that don't have allowed extension
        if ($enable_allowed_extensions && $item->isFile()) {
            if (!in_array($extension, $allowed_extensions)) {
                continue; // Skip to the next file
            }
        }

        //Skip files that have a disallowed extension
        if ($enable_disallowed_extensions && $item->isFile()) {
          if (in_array($extension, $disallowed_extensions)) {
              continue; // Skip to the next file
          }
        }

        if ($item->isDir()) {
            $type = "directory";
            $size = "";  // Not calculating directory size for speed
        } elseif ($item->isFile()) {
            $type = "file";
            $size = $item->getSize();
        } else {
            $type = "unknown";
            $size = "";
        }
        $data[] = '"' . str_replace('"', '""', $name) . '","' . $relative_path . '","' . $type . '","' . $size . '"'; // CSV format with escaping
    }
    return implode("\n", $data);
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $csv_data = generate_csv_data(
        $base_path,
        $allowed_extensions,
        $disallowed_extensions,
        $allowed_directories,
        $disallowed_directories,
        $enable_allowed_extensions,
        $enable_disallowed_extensions,
        $enable_allowed_directories,
        $enable_disallowed_directories
    );
    $filename = "index_" . date("Ymd_His") . "_" . uniqid() . ".csv";
    $filepath = __DIR__ . "/" . $filename;

    file_put_contents($filepath, $csv_data);

    echo json_encode(["status" => "success", "message" => "CSV file created: " . $filename, "filename" => $filename]);
    exit;
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>File Indexer</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            $("#indexerForm").submit(function(e) {
                e.preventDefault();
                var formData = {
                    path: $("#path").val()
                };
                $.ajax({
                    type: "POST",
                    url: "index_files.php", // Or the path to your PHP script
                    data: formData,
                    dataType: "json",
                    success: function(data) {
                        if (data.status === "success") {
                            $("#result").html("<p>CSV file created: <a href='" + data.filename + "'>" + data.filename + "</a></p>");
                        } else {
                            $("#result").html("<p>Error: " + data.message + "</p>");
                        }
                    },
                    error: function(xhr, status, error) {
                        $("#result").html("<p>AJAX Error: " + error + "</p>");
                    }
                });
            });
        });
    </script>
</head>
<body>
    <h1>File Indexer</h1>
    <form id="indexerForm">
        Path to index: <input type="text" id="path" name="path" value="<?php echo htmlspecialchars(__DIR__); ?>"><br><br>
        <button type="submit">Generate Index</button>
    </form>
    <div id="result"></div>
</body>
</html>
